# -*- coding: utf-8 -*-
"""bert-huggingface.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yiY7hVBKASeq71pAuS2Od_l7SdsFjrYQ

# 1.Install Dependencies
"""

!pip install transformers

!pip install requests beautifulsoup4 pandas numpy

!pip install -U datasets fsspec

"""## **2.Import Libraries**"""

from transformers import AutoTokenizer, AutoModelForSequenceClassification
import torch
import requests
from bs4 import BeautifulSoup
import re

"""# 3.Instantiate Model"""

tokenizer = AutoTokenizer.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')

bert_model = AutoModelForSequenceClassification.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')

"""# 4.Test BERT model for Sentiment Analysis.

Note that this particular Bert model outputs 5 stars sentiment score based on the input.
"""

tokens = tokenizer.encode('I hate this, absolutely the worst.', return_tensors='pt')
result = bert_model(tokens)
result.logits

"""Above given is the tensor for 5 starts and based on the output it is 1 star sentiment.

Below give are more such test examples of BERT sentiment Analysis.
"""

tokens = tokenizer.encode('I love this. GREAT !', return_tensors='pt')
result = bert_model(tokens)
result.logits

tokens = tokenizer.encode('I like it but could have been better', return_tensors='pt')
result = bert_model(tokens)
result.logits

"""# 5. Collect Reviews from Amazon Reviews for Sentiment analysis."""

from datasets import load_dataset

dataset = load_dataset("amazon_polarity", split="train[:5000]")

# Extract review texts
reviews = [item['content'] for item in dataset]

# Print first few
for i in range(5):
    print(f"{i+1}. {reviews[i]}\n")

def bert_sentiment_score(review):
    tokens = tokenizer.encode(review, return_tensors='pt')
    result = bert_model(tokens)
    return int(torch.argmax(result.logits)) + 1

for review in reviews:
    sentiment_score = bert_sentiment_score(review)
    print(str(sentiment_score) + "-->" + review)

